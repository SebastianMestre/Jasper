int_val := 1 + 2 + 3 + 4;
float_val := 1.0 + 1.5 + 1.0;
string_val := "test" + "ing" + ".";
int_div := 1 / 2;
float_div := 1.0 / 2.0;
litt := fn () { return true; };
litf := fn () { return false; };
nullv := fn () { return null; };

logic_ops := fn() {
	answer := 1 >= 1 && 1 <= 1;
	
	if (1 > 1 || 1 != 1)
		return false;

	return answer;
};

p_aux := fn(x) => x + 7;
pizza := fn() => 6 |> p_aux();

sum := fn(a, b) => a + b;
issue261 := fn() => 10 |> sum(3);

if_else_if := fn() {
	i := 2;
	if (i == 1)
		return false;
	else if (i == 3)
		return false;
	else if (i == 2)
		return true;
	return false;
};

ternary := fn() {
	i := 0;
	return (if (i == 1) then     0 else 1) +
	        if (i == 0) then i + 1 else 0;
};

array_access := fn() {
	arr := array { 0; 1; 2; 3; 4; };
	arr[0] = 1;
	arr[4] = 5;
	return arr[0] + arr[1] + arr[2] + arr[3] + arr[4];
};

a := 2 - 1;
b := 2 -1;
c := 2-1;
d := 2- 1;
e := -1;
f := -1.1;
g := +1;
h := +1.1;

expressions_as_statements := seq {
	1 + 1;
	"hello";
	fn() => seq { return 0; };
	true;
	1.1;
	(0);
	return 0;
};

ternary_disambiguations := seq {
	(if (1 + 1 == 2) then "YES" else "NO");
	 if (1 + 1 == 2) then "YES" else "NO";
	
	x := fn(a) => true;
	if ((x)(1)) then 1 else 0;
	
	if (true)
		if (true)
		then 1
		else 0;

	bar := false;
	if (bar) { print("10"); }

	if (1 == 1)
		1 + 1;
	
	result := 0;
	return if (if (false) then false else true)
	       then 1
	       else 0;
};

__invoke := fn() => 0;
